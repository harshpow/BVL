loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

local Players = game:service("Players")
local Player = Players.LocalPlayer
Player.CameraMaxZoomDistance = 99
print("99zoom")
local userInput = game:service("UserInputService")
local runService = game:service("RunService")
repeat wait() until Player.Character
local Character = Player.Character
local pHum = Character:WaitForChild("Humanoid")
local humRoot = Character:WaitForChild("HumanoidRootPart")
local Multiplier = 0.015 --adjust this for more or less speed

runService.Stepped:connect(function()
humRoot.CFrame = humRoot.CFrame + pHum.MoveDirection * Multiplier
end)
print("speed")

-- Path: /path/to/your_script.lua

-- Function to add highlight to models
local function addHighlightToModels()
    -- Get the Workspace
    local workspace = game:GetService("Workspace")
    
    -- Iterate through all children in the Workspace
    for _, model in pairs(workspace:GetChildren()) do
        -- Check if the model's name starts with "Pallet" or "Window"
        if model:IsA("Model") and (model.Name:sub(1, 6) == "Pallet" or model.Name:sub(1, 6) == "Window") then
            -- Create a Highlight object
            local highlight = Instance.new("Highlight")
            -- Set the color of the highlight
            highlight.FillColor = Color3.fromRGB(255, 0, 0)
            -- Set the transparency of the highlight fill
            highlight.FillTransparency = 0.8
            -- Set the transparency of the highlight outline
            highlight.OutlineTransparency = 0.9
            -- Set the parent of the Highlight to the model
            highlight.Parent = model
        end
    end
end

-- Call the function to add highlights
addHighlightToModels()

-- File path: StarterPlayerScripts/ToggleHumanoidRootPart.lua

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local modified = false
local originalProperties = {}

local newSize = Vector3.new(10, 10, 10)
local newTransparency = 0.9
local newColor = Color3.fromRGB(255, 0, 0)

-- Function to store original properties
local function storeOriginalProperties(player)
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        originalProperties[player] = {
            Size = humanoidRootPart.Size,
            Transparency = humanoidRootPart.Transparency,
            Color = humanoidRootPart.Color
        }
    end
end

-- Function to modify HumanoidRootPart properties
local function modifyHumanoidRootPart(player)
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        humanoidRootPart.Size = newSize
        humanoidRootPart.Transparency = newTransparency
        humanoidRootPart.Color = newColor
    end
end

-- Function to reset HumanoidRootPart to original properties
local function resetHumanoidRootPart(player)
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart and originalProperties[player] then
        humanoidRootPart.Size = originalProperties[player].Size
        humanoidRootPart.Transparency = originalProperties[player].Transparency
        humanoidRootPart.Color = originalProperties[player].Color
    end
end

-- Toggle function to switch between modified and original properties
local function toggleChanges()
    modified = not modified
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            if modified then
                storeOriginalProperties(player)
                modifyHumanoidRootPart(player)
            else
                resetHumanoidRootPart(player)
            end
        end
    end
end

-- Detect key press
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Q then
        toggleChanges()
    end
end)

-- Handle new players joining
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if modified and player ~= localPlayer then
            modifyHumanoidRootPart(player)
        end
    end)
end)

-- Handle existing players when the script runs
for _, player in pairs(Players:GetPlayers()) do
    player.CharacterAdded:Connect(function(character)
        if modified and player ~= localPlayer then
            modifyHumanoidRootPart(player)
        end
    end)
end
